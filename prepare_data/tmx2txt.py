# coding:utf-8"""处理Cisco xml数据"""from bs4 import BeautifulSoup# import osimport re# from pyquery import PyQuery as pq# from lxml import etreetry:    import xml.etree.cElementTree as ETexcept ImportError:    import xml.etree.ElementTree as ET# 针对def ch_en_split(string):    matchObj = re.match(r"([A-Za-z0-9\/\_\\ \-]+) *(\([\u4e00-\u9fa5]+\))", string)    if matchObj:        ch = matchObj.group(2)        return ch    else:        return stringdef tmx2txt(tmx_path, save_path):    f_save = open(save_path, "w", encoding="utf-8")    # pattern = re.compile(r'_+', )    with open(tmx_path, encoding="utf-8") as tmx:        # with open(txt_path, encoding="utf-8") as txt:        tmxpage = tmx.read()        soup = BeautifulSoup(tmxpage, 'html5lib')        tu_s = soup.select('tu')        for i, tu in enumerate(tu_s):            # for tuv in tu.find_all("tuv"):            # xml: lang = "en-US"            tuv_en = tu.find(attrs={"xml:lang": "en-US"})            text_en = tuv_en.find("seg").text            tuv_cn = tu.find("tuv", attrs={"xml:lang": "zh-CN"})            text_cn = tuv_cn.find("seg").text            if "级备份文件失败" in text_cn:                print(text_cn)            text_en = re.sub("[\t\n]", " ", text_en)            text_cn = re.sub("[\t\n]", " ", text_cn)            text_en = re.sub("[ ]+", " ", text_en)            text_cn = re.sub("[ ]+", " ", text_cn)            #            text_en = re.sub(r"__", "", text_en)            text_cn = re.sub(r"__", "", text_cn)            text_en = re.sub(r"_ ", "", text_en)            text_cn = re.sub(r"_ ", "", text_cn)            text_en = re.sub(r"-", "", text_en)            text_cn = re.sub(r"-", "", text_cn)            # if tuv_cn:            #     text_cn = tuv_cn.find("seg").text            # else:            #     print("tu:{}".format(tu.text))            #     continue            if not re.search(r"[\u4e00-\u9fa5]+", text_cn):                continue            text_cn = ch_en_split(text_cn)            text_cn = text_cn.strip()            text_en = text_en.strip()            if text_cn and text_en:                f_save.write(text_cn + "\t" + text_en + "\n")if __name__ == "__main__":    tmx2txt(tmx_path="/tcxia/nmt_data/Cisco/Cisco-General-clean.tmx",            save_path="/tcxia/nmt_data/Cisco/Cisco-General-parallel")    # ET_parser(tmx_path="/tcxia/nmt_data/Cisco-General.tmx")    # lxml_parser(tmx_path="/tcxia/nmt_data/Cisco-General.tmx")