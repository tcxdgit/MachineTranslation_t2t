from bs4 import BeautifulSoupimport osimport refrom pyquery import PyQuery as pqfrom lxml import etreetry:    import xml.etree.cElementTree as ETexcept ImportError:    import xml.etree.ElementTree as ETdef tmx2txt(tmx_path, save_path):    f_save = open(save_path, "w", encoding="utf-8")    with open(tmx_path, encoding="utf-8") as tmx:        # with open(txt_path, encoding="utf-8") as txt:        tmxpage = tmx.read()        soup = BeautifulSoup(tmxpage, 'html5lib')        tu_s = soup.select('tu')        for i, tu in enumerate(tu_s):            # for tuv in tu.find_all("tuv"):            # xml: lang = "en-US"            tuv_en = tu.find(attrs={"xml:lang": "en-US"})            text_en = tuv_en.find("seg").text            tuv_cn = tu.find("tuv", attrs={"xml:lang": "zh-CN"})            text_cn = tuv_cn.find("seg").text            # if tuv_cn:            #     text_cn = tuv_cn.find("seg").text            # else:            #     print("tu:{}".format(tu.text))            #     continue            text_cn = text_cn.strip()            text_en = text_en.strip()            f_save.write(text_cn + "\t" + text_en + "\n")                # tu_list = tu.find_all('seg')                # if tu_list[0].string and tu_list[1].string:                #     tu_l0 = re.search(r'>(.+)<', tu_list[0].string)                #     tu_l1 = re.search(r'>(.+)<', tu_list[1].string)                #                #     if tu_l0:                #         print(tu_list[0])                #         print(tu_l0.group(1))                #         tu_l0 = tu_l0.group(1)                #     else:                #         tu_l0 = tu_list[0].string                #                #     if tu_l1:                #         print(tu_list[1])                #         print(tu_l1.group(1))                #                #         tu_l1 = tu_l1.group(1)                #     else:                #         tu_l1 = tu_list[1].stringdef pyquery_parser(tmx_path):    d = pq("<html></html>")    d = pq(etree.fromstring("<html></html>"))    d = pq(filename=tmx_path)def ET_parser(tmx_path):    tree = ET.ElementTree(file=tmx_path)    root = tree.getroot()    for sub_tree in tree.iterfind('body/tu'):        for elem in sub_tree.iterfind('tuv'):            if elem.attrib['xml:lang'] == "en-US":                text_en = elem.text            elif elem.attrib['xml:lang'] == "zh-CN":                text_cn = elem.text            print(text_cn + "\t" + text_en)            del text_cn, text_endef lxml_parser(tmx_path):    tree = etree.parse(tmx_path)  # 将xml解析为树结构    root = tree.getroot()  # 获得该树的树根    print(root)## def re_parser(tmx_path):#     pattern = re.compile(r'<tu (.*)</tu>')#     pattern = re.compile(r'<seg id=.*>(.*)</seg>')#     with open(tmx_path, encoding="utf-8") as tmx:#         for line in tmx.readlines():if __name__ == "__main__":    tmx2txt(tmx_path="/tcxia/nmt_data/Cisco-General.tmx", save_path="Cisco-General-parallel")    # ET_parser(tmx_path="/tcxia/nmt_data/Cisco-General.tmx")    # lxml_parser(tmx_path="/tcxia/nmt_data/Cisco-General.tmx")